name: Terraform Enqueue Run
description: Action to enqueue Terraform runs
inputs:
  content-directory:
    description: Directory containing Terraform configuration to run
    default: ${{ github.workspace }}
  organization:
    description: Terraform organization
  workspace:
    description: Terraform organization
  host:
    description: Terraform hostname
    default: app.terraform.io
  tfe-token:
    description: Terraform token
runs:
  using: composite
  steps:
    - name: Download jq
      shell: bash
      run: |
        sudo curl https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -o /usr/local/bin/jq
    - name: Enqueue Run
      shell: bash
      run: |
        set -x

        UPLOAD_FILE_NAME="./content-$(date +%s).tar.gz"

        tar -zcvf "$UPLOAD_FILE_NAME" -C "${{ inputs.content-directory }}" .

        WORKSPACE_ID=($(curl \
          --silet \
          --show-error \
          --header "Authorization: Bearer ${{ inputs.tfe-token }}" \
          --header "Content-Type: application/vnd.api+json" \
          https://${{ inputs.host }}/api/v2/organizations/${{ inputs.organization }}/workspaces/${{ inputs.workspace }} \
          | jq -r '.data.id'))

        UPLOAD_URL=($(curl \
          --silet \
          --show-error \
          --header "Authorization: Bearer ${{ inputs.tfe-token }}" \
          --header "Content-Type: application/vnd.api+json" \
          --request POST \
          --data '{"data":{"type":"configuration-versions"}}' \
          https://${{ inputs.host }}/api/v2/workspaces/$WORKSPACE_ID/configuration-versions \
          | jq -r '.data.attributes."upload-url"'))
        
        curl \
          --silet \
          --show-error \
          --header "Content-Type: application/octet-stream" \
          --request PUT \
          --data-binary @"$UPLOAD_FILE_NAME" \
          $UPLOAD_URL
